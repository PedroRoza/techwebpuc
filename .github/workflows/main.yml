name: TECHWEBPUC
on:
  push:
    branches: [ main ]

jobs: 
  analyze:
    name: Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix: 
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: npm install

      - name: Initialize SAST
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      
      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: .
          push: true
          tags: |
            pedroroza/pucweb:2023
            pedroroza/pucweb:latest

      - name: SAST Analysis
        uses: github/codeql-action/analyze@v2

      - name: Telegram Notify
        uses: appleboy/telegram-action@master
        with: 
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            the Analyzis is done..

  Development:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix: 
        language: [ 'javascript' ]

    environment:
      name: dev
      url: 'techwebpuc.com'
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: npm install

      - name: Initialize SAST
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: SAST Analysis
        uses: github/codeql-action/analyze@v2

      - name: Telegram Notify
        uses: appleboy/telegram-action@master
        with: 
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            the DEVELOPMENT deploy has done.

  staging:
    runs-on: ubuntu-latest
    environment:
      name: hmg
      url: 'techwebpuc.com'
    needs: Development
    steps:
      - name: Run a one-line script
        run: echo deploy HMG

      - name: Telegram Notify
        uses: appleboy/telegram-action@master
        with: 
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            the STAGING deploy has done.
  
  production:
    runs-on: ubuntu-latest
    environment:
      name: prd
      url: 'techwebpuc.com'
    needs: staging
    steps:
      - name: Run a one-line script
        run: echo deploy PRD

      - name: Telegram Notify
        uses: appleboy/telegram-action@master
        with: 
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            the PRODUCTION deploy has done.
  
